apply from: versions

if (isIndependent()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}


android {
    compileSdkVersion build_versions.target_sdk
    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.version_code
        versionName build_versions.version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        if (isIndependent()) {
            applicationId "com.yeungeek.${this.name}"
        }

        resourcePrefix "${project.name}_"
        println("resourcePrefix ${project.name}_")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (!is_debug && this.name.startsWith("module")) {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                java {
                    exclude '**/debug/**'
                }
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }
}

//or use properties
def isIndependent() {
    if (this.name.startsWith("app")) {
        println("this module is application, this.name = ${this.name}")
        return true
    }

    if (!is_debug) {
        println("debug is false,not independent")
        return false
    }

    if (!this.name.toLowerCase().startsWith("module")) {
        println("this module is not real module,this.name = ${this.name}")
        return false
    }

    println("this.module is independent, this.name = ${this.name}")
    return true
}